<?php
//Цикл for
	for (част. A; част. B; част. С) {
	// тіло циклу
	}

	//част. А - зазвичай тут ініціалізується змінна, тощо. Виконується лише один раз.
	//част. В - внутрішній if.
	//част. С - як правило відбувається змінна щетчика. Виконується багаторазово.

//Цикл while
	$i = 5;
	while ($i <= 10) {
		echo ++$i."<br>";
	}
//Цикл while работает немного иначе от for, он проверяет условие на истинность виражения, которая задача в теле. А фор
//просто перевіряє умову з частини В і тоді виходить із циклу. 

//Цикл foreach
	$arr = array(1, 2, 3, 4);
	foreach ($arr as &$value) {
	    $value = $value * 2;
	}
	// массив $arr сейчас таков: array(2, 4, 6, 8)
	//&$value - ссилка тут означає, що змінюється
	//і змінна $value та значення масиву, що передається

//ссилки - &
	$first = "Привет"; 
	// $second = &$first;
	$first = $second;
	$first = "Приветствия";  // НЕ изменяет $second 

	$person = "Ты"; 
	$pname = &$person;
	//порядковість оголошення(посилання) не випливає на ссилки
	$person = "Лена";  // Изменяет и $person, и $pname 

	print ("$first $person и добро пожаловать\n"); 
	print ("$second $pname и добро пожаловать\n");

//цікавинка із функцією
	function sayHello($name){
	echo "<h1>Привет $name!</h1>";
	}
	    $func = 'sayHello';
	    //$func("Guest");
    //ми можемо через змінну викликати функцію
    //та передавати їй значення.

//---include_require
	//Конструкция include предназначена для включения файлов 
	//в код сценария PHP во время исполнения сценария PHP - include "1234.php";

//Різниця між використанням конструкцій include та require.
	//  - include
	// В случае ошибки генерирует предупреждение E_WARNING и продолжает исполнение кода.
	//  - require
	// В случае ошибки генерирует ошибку E_COMPILE_ERROR и останавливает исполнение кода.

//Однократне підключення файлу include_once та require_once.
	//Якщо ми декілька разів будемо викликати простий include в якому буде якась функція,
	//то відповідно у нашому файлі буде виникати помилка - Cannot redeclare err(),
	//щоб цього уникнути використовують конструкції include_once та require_once,
	//котрі перевіряють файл на наявність повторного використання функції у файлі,
	//відповідно другий раз вона його підключати не буде.

//Форми + використання методів GET, POST
	<form action="" method="post">
        <input name="name"><br>
        <input name="age"><br>
        <input type="submit">
	</form>
	//form - це тег HTML
	//не втикати, що name і  age - це імена інпутів

    echo '<p>Моє імя: '.$_POST['name'];
    echo '<p>Мій вік: '.$_POST['age'];
    //можуть відображатись notice, але їх просто тре
    //вирубати в настройках конфігурації

//Оголошення глобальних змінних: global $a (опис під питанням)
 //    можна виділити три варіанти використання глобальних змінних із функціями:

	// - якщо глобальна змінна оголошена в самому коді, то вона не поширюється на функції, 
	// при її виклику у функціях буде повертатись пуста строка. Якщо ця змінна буде оголошена у тілі функції,
	// то її значення буде поширюватись лише на тіло функції.

	// - якщо глобальна змінна оголошена в тілі функції, то вона прийме:
	// 1. останнє оголошене значення в тілі функції, що йде ПІСЛЯ оголошення глобальної змінної в тілі функції.
	// 2. останнє оголошене значення ПОЗА тілом функції, якщо в тілі функції вона не оголошена 
	// або оголошена перед оголошенням глобальної змінної.
	// 3. якщо змінна переприсвоєна і в тілі функції та поза тілом, то пріоритет має те присвоєння
	// що відбулось в тілі функції після оголошення глобальної змінної.

	// - якщо оголошену глобальну змінну передаємо як параметр у функцію:
	// 1. якщо глобальну змінну оголошено у тілі функції, то ця змінна як параметр у функцію 
	// не передаватиметься, і буде чекати свого присвоєння значення в тілі функції 
	// (звісно лише після оголошення глобальної змінної) або в самому коді, обирається останнє присвоєння.
	// 2. тут буде все як при простому використанні функції без передвання параметрів функції, 
	// глобальна змінна буде поширюватись на сам код, а змінна, 
	// що була остання проголошена у функції - буде поширюватись відповідно лише у функції. 
	// Передана змінна як параметр не буде ніде використовуватись.

//Передача параметрів по ссилці.
    <a href="123.php?id=100&faq=fff">My link</a>
