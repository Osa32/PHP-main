$a and ($$) $b - оператор "і" - TRUE тільки якщо і $a, і $b TRUE.
    0 0 - 0
    0 1 - 0
    1 0 - 0
    1 1 - 1

$a or (||) $b - оператор "Або" - TRUE якщо або $a, або $b TRUE та коли обидва TRUE.
    0 0 - 0
    0 1 - 1
    1 0 - 1
    1 1 - 1

$a xor $b - оператор "Виключаюче АБО" - TRUE якщо $a, або $b TRUE, але не обидва TRUE.
    0 0 - 0
    0 1 - 1
    1 0 - 1
    1 1 - 0

! $a - оператор "Заперечення" - TRUE якщо $a не TRUE.

Примітка!
1 === 1 //true
1 === 2 //false

1(true) and 1(true) //true
1(true) and 2(true) //true
5(true) and 0(false) //false
5 and ' ' //false

$a = 2;
$b = ($a == TRUE) ? $a=1 : $a=0;
echo $a;

Примітка!
Значення and має менший пріоритет ніж &&.

    $c = 2332 and 1;
    echo $c; // 2332
Виведе 2332, тому що and має нижчий пріоритет ніж "=" 
(на відміну від &&, тому при використанні "and" потрібно застосовувати дужки) 
і відповідно $c присвоїться відразу 1, незалежно що буде у другому операнді. І так для всіх інших операторів.

    $c = 2332 && 1;
    echo $c;
Виведе 1, тому що && має вищий пріоритет ніж "=", тому тут відразу відбувається логічне порівняння

$link = false or $link = 50;
echo $link;
Виведе 50, спочатку присвоїть $link = false, після дійде до умови or і переприсвоїть $link = 50

$www = 50;
$qqq = FALSE;

$link = $qqq or $www;
echo $link;
Виведе $link = FALSE, тому що тут в умові or не вказана ніяка діє, просто повертається змінна $www
